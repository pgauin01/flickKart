{"version":3,"sources":["pages/orders.js","store/actions/orders.js"],"names":["Orders","props","orders","useSelector","state","console","log","loading","screen","dispatch","useDispatch","useEffect","a","type","LOADING_ORDERS","axios","get","response","GET_ORDERS","payload","data","className","src","length","map","order","key","id","product","el","i","imageCover","quantity","name","price","total","dayjs","createdAt","format","style","textAlign"],"mappings":"0MA+EeA,UA1EA,SAACC,GACd,IAAMC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMF,UAC5CG,QAAQC,IAAIJ,EAAOK,SAEnB,IAKIC,EALEC,EAAWC,cAyDjB,OAvDAC,qBAAU,WACRF,ECRF,uCAAO,WAAOA,GAAP,eAAAG,EAAA,sEAEHH,EAAS,CAAEI,KAAMC,MAFd,SAGoBC,IAAMC,IAAI,oBAH9B,OAGGC,EAHH,OAIHR,EAAS,CAAEI,KAAMK,IAAYC,QAASF,EAASG,KAAKA,KAAKA,OAJtD,gDAOHf,QAAQC,IAAI,KAAIW,UAPb,yDAAP,yDDSG,CAACR,IAGFD,EADEN,EAAOK,QAEP,yBAAKc,UAAU,WACb,yBAAKC,IAAI,kBAGqB,IAAzBpB,EAAOA,OAAOqB,OAErB,yBAAKF,UAAU,UACb,uBAAGA,UAAU,gBAAb,oDAOF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,oBACZnB,EAAOA,OAAOsB,KAAI,SAACC,GAClB,OACE,yBAAKC,IAAKD,EAAME,GAAIN,UAAU,gBAC3BI,EAAMG,QAAQJ,KAAI,SAACK,EAAIC,GACtB,OACE,yBAAKJ,IAAKI,EAAGT,UAAU,iBACrB,yBACEC,IAAG,uBAAkBO,EAAGE,YACxBV,UAAU,gBAEZ,yBAAKA,UAAU,gBACb,mCAASQ,EAAGG,UACZ,oCAAUH,EAAGI,MACb,2CAAYJ,EAAGK,YAMvB,yBAAKb,UAAU,gBACb,kDAAmBI,EAAMU,OACzB,0CACcC,IAAMX,EAAMY,WAAWC,OAAO,sBAY1D,6BAASjB,UAAU,kBACjB,wBACEA,UAAU,+CACVkB,MAAO,CAAEC,UAAW,WAFtB,eAMChC","file":"static/js/6.54985630.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrders } from \"./../store/actions/orders\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst Orders = (props) => {\r\n  const orders = useSelector((state) => state.orders);\r\n  console.log(orders.loading);\r\n  // console.log(orders);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n  }, [dispatch]);\r\n  let screen;\r\n  if (orders.loading) {\r\n    screen = (\r\n      <div className=\"loading\">\r\n        <img src=\"/loading.gif\" />\r\n      </div>\r\n    );\r\n  } else if (orders.orders.length === 0) {\r\n    screen = (\r\n      <div className=\"noItem\">\r\n        <p className=\"noItem__text\">\r\n          No products found in cart start adding some....\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    screen = (\r\n      <div className=\"orders\">\r\n        <div className=\"orders-container\">\r\n          {orders.orders.map((order) => {\r\n            return (\r\n              <div key={order.id} className=\"orders__card\">\r\n                {order.product.map((el, i) => {\r\n                  return (\r\n                    <div key={i} className=\"orders__items\">\r\n                      <img\r\n                        src={`/img/product/${el.imageCover}`}\r\n                        className=\"orders__img\"\r\n                      />\r\n                      <div className=\"orders__desc\">\r\n                        <h4>Qty:{el.quantity}</h4>\r\n                        <h4>Name:{el.name}</h4>\r\n                        <h4>Price:₹{el.price}</h4>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n\r\n                <div className=\"orders__calc\">\r\n                  <h1>Total Amount:₹{order.total}</h1>\r\n                  <h1>\r\n                    Ordered At:{dayjs(order.createdAt).format(\"DD/MM/YYYY\")}\r\n                  </h1>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"section-orders\">\r\n      <h1\r\n        className=\"heading-secondary u-margin-horizontal-medium\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        Your orders\r\n      </h1>\r\n      {screen}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import { GET_ORDERS, LOADING_ORDERS } from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getOrders = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: LOADING_ORDERS });\r\n      const response = await axios.get(\"/bookings/orders\");\r\n      dispatch({ type: GET_ORDERS, payload: response.data.data.data });\r\n      // console.log(response.data.data.data);\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n};\r\n"],"sourceRoot":""}