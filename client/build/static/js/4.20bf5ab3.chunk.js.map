{"version":3,"sources":["store/actions/reviews.js","components/layout/editAddress.js","components/layout/addAddress.js","components/layout/Address.js","components/UI/userSettings.js","components/layout/editReview.js","components/layout/reviews.js","pages/user.js"],"names":["AddNewReview","rating","review","dispatch","getState","a","user","credentials","id","product","products","userData","axios","post","response","console","log","getReviews","type","LOADING_UI","get","GET_REVIEW","payload","data","STOP_LOADING_UI","updateReview","reviewId","patch","UPDATE_REVIEW","deleteReview","delete","DELETE_REVIEW","EditAddress","props","useDispatch","add","useSelector","state","address","find","el","useState","SetAddress","inputSubmitHandler","e","preventDefault","updatingAddress","className","onSubmit","name","value","onChange","event","target","onClick","history","goBack","AddAddress","addAddress","to","Address","screen","editadd","setEditAdd","setAddAddress","SetId","length","map","key","style","cursor","editAddressHandler","src","deleteAddress","deleteAddressHandler","formReducer","action","inputValues","input","errorReducer","errorValues","message","email","password","passwordConfirm","Usersettings","error","ui","_id","photo","useReducer","passwordCurrent","formState","dispatchFormState","errorState","dispatchErrorState","useEffect","err","errors","inputChangeHandler","useCallback","inputValue","inputIdentifier","submitHandler","updateMe","passwordUpdateHandler","updatePassword","letterSpacing","htmlFor","placeholder","required","EditReview","SetRating","SetReview","inputHandler","updatedData","max","min","Reviews","setScreen","prop","setProp","reviews","loading","reviewView","deleteReviewHandler","pro","User","SettingScreen","AddresScreen","ReviewScreen","SetIsScreen","ScreenChangeHandler"],"mappings":"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","file":"static/js/4.20bf5ab3.chunk.js","sourcesContent":["import {\r\n  GET_REVIEW,\r\n  LOADING_UI,\r\n  STOP_LOADING_UI,\r\n  DELETE_REVIEW,\r\n  UPDATE_REVIEW,\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const AddNewReview = (rating, review) => {\r\n  return async (dispatch, getState) => {\r\n    const user = getState().user.credentials.id;\r\n    const product = getState().products.product.id;\r\n\r\n    const userData = {\r\n      review,\r\n      rating,\r\n      product,\r\n      user,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"/reviews\", userData);\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getReviews = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: LOADING_UI });\r\n      const user = getState().user.credentials.id;\r\n      const response = await axios.get(`reviews/${user}`);\r\n      dispatch({ type: GET_REVIEW, payload: response.data.data.data });\r\n      dispatch({ type: STOP_LOADING_UI });\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateReview = (reviewId, userData) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.patch(`/reviews/${reviewId}`, userData);\r\n      // console.log(response.data.data.data);\r\n      dispatch({ type: UPDATE_REVIEW, payload: response.data.data.data });\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteReview = (reviewId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.delete(`/reviews/${reviewId}`);\r\n      dispatch({ type: DELETE_REVIEW, payload: reviewId });\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatingAddress } from \"../../store/actions/user\";\r\n\r\nconst EditAddress = (props) => {\r\n  // console.log(props);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const adress = user.credentials.address;\r\n  const add = adress.find((el) => el.id === props.id);\r\n  const [address, SetAddress] = useState(add.address);\r\n  // console.log(inputVal);\r\n\r\n  // window.history.pushState(null, null, newPath);\r\n\r\n  const inputHandler = (e) => {\r\n    SetAddress(e);\r\n  };\r\n  const inputSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updatingAddress(add.id, { address }));\r\n  };\r\n\r\n  const goBackscreen = () => {\r\n    props.history.goBack();\r\n  };\r\n  return (\r\n    <div className=\"userViewAddress__edit\">\r\n      <h1 className=\"u-margin-horizontal-medium\">Edit Address</h1>\r\n      <form onSubmit={inputSubmitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          id=\"address\"\r\n          className=\"userViewAddress__input\"\r\n          value={address}\r\n          onChange={(event) => inputHandler(event.target.value)}\r\n        />\r\n        <div className=\"userViewAddress__actions u-margin-top-medium\">\r\n          <button className=\"btn btn--cart--1\" onClick={inputSubmitHandler}>\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"btn btn--cart--2 u-margin-left-3\"\r\n            onClick={goBackscreen}\r\n          >\r\n            cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAddress;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAddress } from \"../../store/actions/user\";\r\n\r\nconst AddAddress = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.credentials.id);\r\n\r\n  const [address, SetAddress] = useState(\"\");\r\n  //   console.log(address);\r\n\r\n  const inputHandler = (e) => {\r\n    SetAddress(e);\r\n  };\r\n  const inputSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addAddress({ address, user }));\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"userViewAddress__edit\">\r\n      <h1 className=\"u-margin-horizontal-medium\">Add Address</h1>\r\n      <form onSubmit={inputSubmitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          id=\"address\"\r\n          className=\"userViewAddress__input\"\r\n          value={address}\r\n          onChange={(event) => inputHandler(event.target.value)}\r\n        />\r\n        <div className=\"userViewAddress__actions u-margin-top-medium\">\r\n          <button className=\"btn btn--cart--1\" onClick={inputSubmitHandler}>\r\n            Submit\r\n          </button>\r\n          <Link to=\"/user\">\r\n            <button className=\"btn btn--cart--2 u-margin-left-3\">cancel</button>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAddress;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteAddress } from \"../../store/actions/user\";\r\nimport EditAddress from \"../../components/layout/editAddress\";\r\nimport AddAddresScreen from \"../../components/layout/addAddress\";\r\n\r\nconst Address = (props) => {\r\n  const [editadd, setEditAdd] = useState(false);\r\n  const [addAddress, setAddAddress] = useState(false);\r\n  const [id, SetId] = useState();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const { address } = user.credentials;\r\n  // console.log(address.length);\r\n\r\n  const deleteAddressHandler = (id) => {\r\n    dispatch(deleteAddress(id));\r\n  };\r\n\r\n  const editAddressHandler = (id) => {\r\n    setEditAdd(true);\r\n    SetId(id);\r\n  };\r\n\r\n  const addAddressHandler = () => {\r\n    setAddAddress(true);\r\n  };\r\n  let screen;\r\n  if (address.length === 0) {\r\n    screen = (\r\n      <div className=\"add\">\r\n        <p>No address found</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    screen = (\r\n      <div className=\"userViewAddress__address\">\r\n        {address.map((el) => {\r\n          return (\r\n            <div key={el.id} className=\"userViewAddress__address--block\">\r\n              <div className=\"userViewAddress__header\">\r\n                <div\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => editAddressHandler(el.id)}\r\n                >\r\n                  <img src=\"/img/edit.png\" className=\"userViewAddress__img\" />\r\n                </div>\r\n                <div\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => deleteAddressHandler(el.id)}\r\n                >\r\n                  <img src=\"/img/delete.png\" className=\"userViewAddress__img\" />\r\n                </div>\r\n              </div>\r\n              <h3 className=\"u-margin-horizontal-small\">{el.user.name}</h3>\r\n              <p className=\"u-margin-horizontal-small\"> {el.address}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (editadd) {\r\n    screen = <EditAddress id={id} {...props} />;\r\n  }\r\n\r\n  if (addAddress) {\r\n    screen = <AddAddresScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"userViewAddress\">\r\n      {addAddress ? null : (\r\n        <button className=\"btn btn__address\" onClick={addAddressHandler}>\r\n          Add New Address\r\n        </button>\r\n      )}\r\n\r\n      {screen}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import React, { useEffect, useReducer, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateMe, updatePassword } from \"../../store/actions/user\";\r\n\r\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\r\nconst FORM_ERROR = \"FORM_ERROR\";\r\nconst FORM_CLEAR = \"FORM_CLEAR\";\r\n\r\nconst formReducer = (state, action) => {\r\n  if (action.type === FORM_INPUT_UPDATE) {\r\n    const updatedValues = {\r\n      ...state.inputValues,\r\n      [action.input]: action.value,\r\n    };\r\n    // console.log(state);\r\n    return {\r\n      inputValues: updatedValues,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst errorReducer = (state, action) => {\r\n  if (action.type === FORM_ERROR) {\r\n    const error = {\r\n      ...state.errorValues,\r\n      [action.name]: action.message,\r\n    };\r\n    return {\r\n      errorValues: error,\r\n    };\r\n  }\r\n  if (action.type === FORM_CLEAR) {\r\n    const clearError = {\r\n      ...state.errorValues,\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    };\r\n    return {\r\n      errorValues: clearError,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst Usersettings = (props) => {\r\n  const user = useSelector((state) => state.user.credentials);\r\n  const error = useSelector((state) => state.ui.error);\r\n  // console.log(error);\r\n  // console.log(user);\r\n\r\n  const { email, _id, name, photo } = user;\r\n  const img = `/img/users/${photo}`;\r\n  const dispatch = useDispatch();\r\n\r\n  const [formState, dispatchFormState] = useReducer(formReducer, {\r\n    inputValues: {\r\n      name: name ? name : \"\",\r\n      email: email ? email : \"\",\r\n      passwordCurrent: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    },\r\n  });\r\n\r\n  // console.log(formState);\r\n\r\n  const [errorState, dispatchErrorState] = useReducer(errorReducer, {\r\n    errorValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n    },\r\n  });\r\n  // console.log(errorState);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      for (let err in error.errors) {\r\n        dispatchErrorState({\r\n          type: FORM_ERROR,\r\n          name: err,\r\n          message: error.errors[err].message,\r\n        });\r\n      }\r\n      if (error.message === \"your current password is wrong\") {\r\n        dispatchErrorState({\r\n          type: FORM_ERROR,\r\n          name: \"password\",\r\n          message: error.message,\r\n        });\r\n      }\r\n    }\r\n  }, [error]);\r\n\r\n  const inputChangeHandler = useCallback(\r\n    (inputValue, inputIdentifier) => {\r\n      dispatchFormState({\r\n        type: FORM_INPUT_UPDATE,\r\n        value: inputValue,\r\n        input: inputIdentifier,\r\n      });\r\n    },\r\n    [dispatchFormState]\r\n  );\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateMe(formState.inputValues));\r\n    await dispatchErrorState({ type: FORM_CLEAR });\r\n  };\r\n\r\n  const passwordUpdateHandler = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(updatePassword(formState.inputValues));\r\n    await dispatchErrorState({ type: FORM_CLEAR });\r\n  };\r\n\r\n  return (\r\n    <div className=\"userview__content\">\r\n      <div className=\"userview__form-container\">\r\n        <h1\r\n          style={{ letterSpacing: \"1px\" }}\r\n          className=\"u-margin-bottom-medium u-margin-left-2 heading-color\"\r\n        >\r\n          Your Account Settings\r\n        </h1>\r\n        <form className=\"form\" onSubmit={submitHandler}>\r\n          <div className=\"form__group\">\r\n            <label\r\n              className=\"form__label--bold u-margin-bottom-small u-margin-left-3\"\r\n              htmlFor=\"name\"\r\n            >\r\n              Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              className=\"form__input\"\r\n              id=\"name\"\r\n              value={formState.inputValues.name}\r\n              onChange={(e) =>\r\n                inputChangeHandler(e.target.value, e.target.name)\r\n              }\r\n              required\r\n              // error={formValidate.validator.email}\r\n            />\r\n            {errorState.errorValues.name ? (\r\n              <p className=\"form__validText\">{errorState.errorValues.name}</p>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"form__group\">\r\n            <label\r\n              className=\"form__label--bold u-margin-bottom-small u-margin-left-3\"\r\n              htmlFor=\"email\"\r\n            >\r\n              Email address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email address\"\r\n              className=\"form__input\"\r\n              id=\"email\"\r\n              value={formState.inputValues.email}\r\n              onChange={(e) =>\r\n                inputChangeHandler(e.target.value, e.target.name)\r\n              }\r\n              required\r\n              // error={formValidate.validator.email}\r\n            />\r\n            {errorState.errorValues.email ? (\r\n              <p className=\"form__validText\">{errorState.errorValues.email}</p>\r\n            ) : null}\r\n          </div>\r\n          {/* <div className=\"form__group form__photo--upload u-margin-left-2\">\r\n            <img className=\"form__user-photo\" src={img} alt=\"User photo\" />\r\n            <input\r\n              className=\"form__upload\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"photo\"\r\n              name=\"photo\"\r\n            />\r\n            <label htmlFor=\"photo\">Choose new photo</label>\r\n          </div> */}\r\n          <div className=\"form__group right\">\r\n            <button className=\"btn btn--red\">Save Settings</button>\r\n          </div>\r\n        </form>\r\n        <hr className=\"u-margin-top-medium u-margin-bottom-medium\" />\r\n        <div className=\"userview__form-container\">\r\n          <h1\r\n            style={{ letterSpacing: \"1px\" }}\r\n            className=\"u-margin-bottom-medium u-margin-left-2 heading-color\"\r\n          >\r\n            Password Change\r\n          </h1>\r\n          <form onSubmit={passwordUpdateHandler}>\r\n            <div className=\"form__group\">\r\n              <label\r\n                className=\"form__label--bold u-margin-bottom-small u-margin-left-2\"\r\n                htmlFor=\"email\"\r\n              >\r\n                Current Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordCurrent\"\r\n                placeholder=\"*********\"\r\n                className=\"form__input\"\r\n                id=\"passwordCurrent\"\r\n                value={formState.inputValues.passwordCurrent}\r\n                onChange={(e) =>\r\n                  inputChangeHandler(e.target.value, e.target.name)\r\n                }\r\n                required\r\n                // error={formValidate.validator.email}\r\n              />\r\n              {errorState.errorValues.password ? (\r\n                <p className=\"form__validText\">\r\n                  {errorState.errorValues.password}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"form__group\">\r\n              <label\r\n                className=\"form__label--bold u-margin-bottom-small u-margin-left-2\"\r\n                htmlFor=\"email\"\r\n              >\r\n                New Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"*********\"\r\n                className=\"form__input\"\r\n                id=\"password\"\r\n                value={formState.inputValues.password}\r\n                onChange={(e) =>\r\n                  inputChangeHandler(e.target.value, e.target.name)\r\n                }\r\n                required\r\n                // error={formValidate.validator.email}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form__group\">\r\n              <label\r\n                className=\"form__label--bold u-margin-bottom-small u-margin-left-2\"\r\n                htmlFor=\"email\"\r\n              >\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                placeholder=\"*********\"\r\n                className=\"form__input\"\r\n                id=\"passwordConfirm\"\r\n                value={formState.inputValues.passwordConfirm}\r\n                onChange={(e) =>\r\n                  inputChangeHandler(e.target.value, e.target.name)\r\n                }\r\n                required\r\n                // error={formValidate.validator.email}\r\n              />\r\n              {errorState.errorValues.passwordConfirm ? (\r\n                <p className=\"form__validText\">\r\n                  {errorState.errorValues.passwordConfirm}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form__group right\">\r\n              <button className=\"btn btn--red\">Update Password</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Usersettings;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateReview } from \"../../store/actions/reviews\";\r\n\r\nconst EditReview = (props) => {\r\n  //   console.log(props.data);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [rating, SetRating] = useState(props.data.rating);\r\n  const [review, SetReview] = useState(props.data.review);\r\n  //   console.log(review);\r\n  // window.history.pushState(null, null, newPath);\r\n\r\n  const inputHandler = (e) => {\r\n    if (e.name === \"Rating\") {\r\n      SetRating(e.value);\r\n    } else if (e.name === \"Review\") {\r\n      SetReview(e.value);\r\n    }\r\n  };\r\n  const inputSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const updatedData = {\r\n      review,\r\n      rating,\r\n    };\r\n    dispatch(updateReview(props.data._id, updatedData));\r\n  };\r\n\r\n  const goBackscreen = () => {\r\n    props.history.goBack();\r\n  };\r\n  return (\r\n    <div className=\"userViewAddress__edit\">\r\n      <h1 className=\"u-margin-horizontal-medium\">Edit Review</h1>\r\n      <form onSubmit={inputSubmitHandler}>\r\n        <div className=\"form__group\">\r\n          <label htmlFor=\"Rating\" className=\"form__label form__label--center\">\r\n            Rating\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            max=\"5\"\r\n            min=\"1\"\r\n            name=\"Rating\"\r\n            id=\"Rating\"\r\n            className=\"form__input\"\r\n            value={rating}\r\n            onChange={(event) => inputHandler(event.target)}\r\n          />\r\n        </div>\r\n        <div className=\"form__group\">\r\n          <label htmlFor=\"Review\" className=\"form__label form__label--center\">\r\n            Review\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Review\"\r\n            id=\"Review\"\r\n            className=\"form__input\"\r\n            value={review}\r\n            onChange={(event) => inputHandler(event.target)}\r\n          />\r\n        </div>\r\n        <div className=\"userViewAddress__actions u-margin-top-medium\">\r\n          <button className=\"btn btn--cart--1\" onClick={inputSubmitHandler}>\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"btn btn--cart--2 u-margin-left-3\"\r\n            onClick={goBackscreen}\r\n          >\r\n            cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditReview;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReviews, deleteReview } from \"../../store/actions/reviews\";\r\nimport EditReview from \"../../components/layout/editReview\";\r\n\r\nconst Reviews = (props) => {\r\n  const [screen, setScreen] = useState(false);\r\n  const [prop, setProp] = useState({});\r\n  const dispatch = useDispatch();\r\n  const reviews = useSelector((state) => state.reviews);\r\n  const loading = useSelector((state) => state.ui.loading);\r\n  // console.log(reviews);\r\n  // console.log(loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getReviews());\r\n  }, [dispatch]);\r\n\r\n  const deleteReviewHandler = async (reviewId) => {\r\n    // console.log(reviewId);\r\n    await dispatch(deleteReview(reviewId));\r\n  };\r\n\r\n  const changeScreenHandler = (pro) => {\r\n    setScreen(true);\r\n    setProp(pro);\r\n  };\r\n\r\n  let reviewView;\r\n  if (loading) {\r\n    reviewView = (\r\n      // <div className=\"loading\">\r\n      <img src=\"/loading.gif\" />\r\n      // </div>\r\n    );\r\n  } else if (reviews.reviews.length === 0) {\r\n    // console.log(\"x\");\r\n    reviewView = (\r\n      <div className=\"review\">\r\n        <p>No review added..</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    reviewView = reviews.reviews.map((review) => {\r\n      return (\r\n        <div key={review.id} className=\"reviewScreen__block\">\r\n          <div className=\"reviewScreen__header\">\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => changeScreenHandler(review)}\r\n            >\r\n              <img src=\"/img/edit.png\" className=\"reviewScreen__img\" />\r\n            </div>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => deleteReviewHandler(review.id)}\r\n            >\r\n              <img src=\"/img/delete.png\" className=\"reviewScreen__img\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"reviewScreen__description\">\r\n            <h3 className=\"u-margin-horizontal-small\">{review.product.name}</h3>\r\n            <h3 className=\"u-margin-horizontal-small\">{review.rating}*</h3>\r\n            <p className=\"u-margin-horizontal-small\"> {review.review}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  if (screen) {\r\n    reviewView = <EditReview data={prop} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"reviewScreen\">\r\n      {screen ? null : (\r\n        <h1 className=\"heading-secondary u-margin-bottom-small\">My Reviews</h1>\r\n      )}\r\n      <div className=\"reviewScreen__container\">{reviewView}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AddressScreen from \"../components/layout/Address\";\r\nimport UserSettings from \"../components/UI/userSettings\";\r\nimport Review from \"../components/layout/reviews\";\r\n\r\nconst User = (props) => {\r\n  let SettingScreen = <UserSettings />;\r\n  let AddresScreen = <AddressScreen {...props} />;\r\n  let ReviewScreen = <Review {...props} />;\r\n\r\n  const [screen, SetIsScreen] = useState(SettingScreen);\r\n\r\n  // const newPath = `/user/home`;\r\n  // window.history.pushState(null, null, newPath);\r\n\r\n  const ScreenChangeHandler = (screen) => {\r\n    SetIsScreen(screen);\r\n  };\r\n  return (\r\n    <section className=\"section-user\">\r\n      <main className=\"userview\">\r\n        <div className=\"userview__menu\">\r\n          <ul className=\"sidenav__list\">\r\n            <li\r\n              className=\"sidenav__item\"\r\n              onClick={() => ScreenChangeHandler(SettingScreen)}\r\n            >\r\n              My Settings\r\n            </li>\r\n            <Link to=\"/user/wishlist\">\r\n              <li className=\"sidenav__item\">Wishlist</li>\r\n            </Link>\r\n            <Link to=\"/user/orders\">\r\n              <li className=\"sidenav__item\">Orders</li>\r\n            </Link>\r\n            <Link to=\"/user/cart\">\r\n              <li className=\"sidenav__item\">Cart</li>\r\n            </Link>\r\n            <li\r\n              className=\"sidenav__item\"\r\n              onClick={() => ScreenChangeHandler(ReviewScreen)}\r\n            >\r\n              My Reviews\r\n            </li>\r\n            <li\r\n              className=\"sidenav__item\"\r\n              onClick={() => ScreenChangeHandler(AddresScreen)}\r\n            >\r\n              My Address\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {screen}\r\n      </main>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"sourceRoot":""}